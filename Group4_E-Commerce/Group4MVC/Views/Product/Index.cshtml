@model IEnumerable<DAL_Group4_E_Commerce.Models.Product>
@{
    ViewData["Title"] = "Shop";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var selectedCategoryId = Context.Request.Query["categoryId"].ToString();
    var selectedSupplierId = Context.Request.Query["supplierId"].ToString();
    var keyword = Context.Request.Query["keyword"].ToString();
}
<!-- Breadcrumb Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-12">
            <nav class="breadcrumb bg-light mb-30">
                <a class="breadcrumb-item text-dark" href="/">Home</a>
                <span class="breadcrumb-item active">Shop List</span>
            </nav>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Shop Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <!-- Shop Sidebar Start -->
        <div class="col-lg-3 col-md-4">
            <form method="get" action="@Url.Action("Index", "Product")" class="mb-4">
                <div class="form-group">
                    <label for="categoryId">Lo·∫°i h√†ng</label>
                    <select class="form-control" id="categoryId" name="categoryId">
                        <option value="">T·∫•t c·∫£</option>
                        @if (ViewBag.Categories != null)
                        {
                            foreach (var cat in ViewBag.Categories)
                            {
                                if (selectedCategoryId == cat.CategoryId.ToString())
                                {
                                    <option value="@cat.CategoryId" selected>@cat.CategoryName</option>
                                }
                                else
                                {
                                    <option value="@cat.CategoryId">@cat.CategoryName</option>
                                }
                            }
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="supplierId">Nh√† cung c·∫•p</label>
                    <select class="form-control" id="supplierId" name="supplierId">
                        <option value="">T·∫•t c·∫£</option>
                        @if (ViewBag.Suppliers != null)
                        {
                            foreach (var sup in ViewBag.Suppliers)
                            {
                                if (selectedSupplierId == sup.SupplierId.ToString())
                                {
                                    <option value="@sup.SupplierId" selected>@sup.CompanyName</option>
                                }
                                else
                                {
                                    <option value="@sup.SupplierId">@sup.CompanyName</option>
                                }
                            }
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="keyword">T·ª´ kh√≥a</label>
                    <input type="text" class="form-control" id="keyword" name="keyword" value="@keyword" placeholder="T√¨m ki·∫øm..." />
                </div>
                <button type="submit" class="btn btn-primary w-100">L·ªçc</button>
            </form>
        </div>
        <!-- Shop Sidebar End -->
        <!-- Shop Product Start -->
        <div class="col-lg-9 col-md-8">
            <div id="product-list-container">
                @Html.Partial("_ProductListPartial", Model)
            </div>
            <nav>
                <ul class="pagination justify-content-center">
                    @{
                        int total = ViewBag.Total ?? 0;
                        int page = ViewBag.Page ?? 1;
                        int pageSize = ViewBag.PageSize ?? 9;
                        int totalPages = (int)Math.Ceiling((double)total / pageSize);
                        string queryString = $"&categoryId={selectedCategoryId}&supplierId={selectedSupplierId}&keyword={keyword}";
                    }
                    @if (totalPages > 1)
                    {
                        for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == page ? "active" : "")">
                                <a class="page-link page-ajax-link" href="#" data-page="@i">@i</a>
                            </li>
                        }
                    }
                </ul>
            </nav>
        </div>
        <!-- Shop Product End -->
    </div>
</div>
<!-- Shop End -->
<div id="compare-float-btn" style="position:fixed;bottom:40px;right:40px;z-index:9999;display:none;">
    <button class="btn btn-primary btn-lg shadow" id="go-compare-btn">
        üîÑ Xem so s√°nh (<span id="compare-count">0</span>)
    </button>
</div>
@section Scripts {
<script>
    // Helper: get/set array from localStorage
    function getList(key) {
        return JSON.parse(localStorage.getItem(key) || '[]');
    }
    function setList(key, arr) {
        localStorage.setItem(key, JSON.stringify(arr));
    }

    // C·∫≠p nh·∫≠t tr·∫°ng th√°i icon khi load trang ho·∫∑c sau khi ajax load
    function updateIcons() {
        var wishlist = getList('wishlist');
        var compare = getList('compare');
        $('.wishlist-btn').each(function () {
            var pid = $(this).data('product-id');
            if (wishlist.includes(pid)) {
                $(this).addClass('active-wishlist').attr('title', 'B·ªè kh·ªèi y√™u th√≠ch').tooltip('dispose').tooltip();
            } else {
                $(this).removeClass('active-wishlist').attr('title', 'Y√™u th√≠ch').tooltip('dispose').tooltip();
            }
        });
        $('.compare-btn').each(function () {
            var pid = $(this).data('product-id');
            if (compare.includes(pid)) {
                $(this).addClass('active-compare').attr('title', 'B·ªè kh·ªèi so s√°nh').tooltip('dispose').tooltip();
            } else {
                $(this).removeClass('active-compare').attr('title', 'So s√°nh').tooltip('dispose').tooltip();
            }
        });
        updateCompareBtn();
    }

    // X·ª≠ l√Ω click wishlist
    $(document).on('click', '.wishlist-btn', function (e) {
        e.preventDefault();
        var pid = $(this).data('product-id');
        var wishlist = getList('wishlist');
        if (wishlist.includes(pid)) {
            wishlist = wishlist.filter(x => x !== pid);
        } else {
            wishlist.push(pid);
        }
        setList('wishlist', wishlist);
        updateIcons();
    });

    // X·ª≠ l√Ω click compare
    $(document).on('click', '.compare-btn', function (e) {
        e.preventDefault();
        var pid = $(this).data('product-id');
        var compare = getList('compare');
        if (compare.includes(pid)) {
            compare = compare.filter(x => x !== pid);
        } else {
            if (compare.length >= 4) {
                alert('B·∫°n ch·ªâ c√≥ th·ªÉ so s√°nh t·ªëi ƒëa 4 s·∫£n ph·∫©m!');
                return;
            }
            compare.push(pid);
        }
        setList('compare', compare);
        updateIcons();
    });

    // Khi load trang, c·∫≠p nh·∫≠t icon
    $(function () {
        $('[data-toggle="tooltip"]').tooltip();
        updateIcons();
    });

    // G·ªçi l·∫°i updateIcons sau m·ªói l·∫ßn ajax load (ph√¢n trang, l·ªçc)
    function afterAjaxProductList() {
        $('[data-toggle="tooltip"]').tooltip();
        updateIcons();
    }

    // Hook v√†o ajax load c·ªßa ph√¢n trang/l·ªçc
    // (T√¨m ƒëo·∫°n $.get ho·∫∑c ajax load s·∫£n ph·∫©m, th√™m afterAjaxProductList v√†o callback)
    // V√≠ d·ª•:
    // $.get(..., function(data) { $('#product-list-container').html(data); afterAjaxProductList(); });

    // N·∫øu b·∫°n d√πng t√™n h√†m kh√°c, h√£y thay th·∫ø cho ƒë√∫ng!

    function loadProductsAjax(params, pushUrl = true) {
        $.get('@Url.Action("AjaxList", "Product")', params, function (data) {
            $('#product-list-container').html(data);
            if (pushUrl) {
                const url = new URL(window.location.href);
                url.searchParams.set('categoryId', params.categoryId || '');
                url.searchParams.set('supplierId', params.supplierId || '');
                url.searchParams.set('keyword', params.keyword || '');
                url.searchParams.set('page', params.page || 1);
                window.history.pushState(params, '', url.pathname + url.search);
            }
            afterAjaxProductList();
        });
    }

    $(document).on('click', '.page-ajax-link', function (e) {
        e.preventDefault();
        var page = $(this).data('page');
        var categoryId = $('#categoryId').val();
        var supplierId = $('#supplierId').val();
        var keyword = $('#keyword').val();
        loadProductsAjax({ categoryId, supplierId, keyword, page });
    });

    // AJAX cho form l·ªçc
    $(document).on('submit', 'form', function (e) {
        if ($(this).find('#categoryId').length > 0) {
            e.preventDefault();
            var categoryId = $('#categoryId').val();
            var supplierId = $('#supplierId').val();
            var keyword = $('#keyword').val();
            loadProductsAjax({ categoryId, supplierId, keyword, page: 1 });
        }
    });

    // L·∫Øng nghe back/forward
    window.addEventListener('popstate', function (event) {
        var params = event.state;
        if (params) {
            loadProductsAjax(params, false);
        } else {
            // N·∫øu kh√¥ng c√≥ state, l·∫•y t·ª´ URL
            var url = new URL(window.location.href);
            var categoryId = url.searchParams.get('categoryId') || '';
            var supplierId = url.searchParams.get('supplierId') || '';
            var keyword = url.searchParams.get('keyword') || '';
            var page = url.searchParams.get('page') || 1;
            loadProductsAjax({ categoryId, supplierId, keyword, page }, false);
        }
    });

    // Khi load trang, n·∫øu c√≥ query string th√¨ t·ª± ƒë·ªông load ƒë√∫ng tr·∫°ng th√°i (ch·ªâ khi kh√¥ng ph·∫£i trang ƒë·∫ßu)
    $(document).ready(function () {
        var url = new URL(window.location.href);
        var hasQuery = url.search.length > 0;
        if (hasQuery) {
            var categoryId = url.searchParams.get('categoryId') || '';
            var supplierId = url.searchParams.get('supplierId') || '';
            var keyword = url.searchParams.get('keyword') || '';
            var page = url.searchParams.get('page') || 1;
            loadProductsAjax({ categoryId, supplierId, keyword, page }, false);
        }
    });

    // Hi·ªÉn th·ªã n√∫t n·ªïi Xem so s√°nh n·∫øu c√≥ s·∫£n ph·∫©m ƒë∆∞·ª£c ch·ªçn
    function updateCompareBtn() {
        var compare = getList('compare');
        if (compare.length > 0) {
            $('#compare-float-btn').show();
            $('#compare-count').text(compare.length);
        } else {
            $('#compare-float-btn').hide();
        }
    }

    // Khi b·∫•m n√∫t Xem so s√°nh
    $(document).on('click', '#go-compare-btn', function () {
        var compare = getList('compare');
        if (compare.length === 0) return;
        window.location.href = '/Product/Compare?ids=' + compare.join(',');
    });
</script>
<style>
    .active-wishlist {
        color: #dc3545 !important;
        background: #ffe6ea !important;
        border-color: #dc3545 !important;
    }
    .active-compare {
        color: #007bff !important;
        background: #e6f0ff !important;
        border-color: #007bff !important;
    }
</style>
}