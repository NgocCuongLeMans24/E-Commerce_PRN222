@model ViewModels.ProfileViewModel
@{
    ViewData["Title"] = "My Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
        <link rel="stylesheet" href="~/css/profile.css" />
}

<div class="profile-container">
    <div class="profile-wrapper">
        <!-- Profile Header -->
        <div class="profile-header">
            <div class="profile-avatar">
                @if (!string.IsNullOrEmpty(Model.CurrentPhotoUrl) && Model.CurrentPhotoUrl != "default-avatar")
                {
                    <img src="@Model.CurrentPhotoUrl" alt="Profile Photo" style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%;">
                }
                else
                {
                    <div class="recent-avatar">
                        @(string.IsNullOrEmpty(Model.FullName) ? "?" : Model.FullName.Substring(0, 1).ToUpper())
                    </div>
                }
            </div>

            <h1 class="profile-title">My Profile</h1>
            <p class="profile-subtitle">Manage your account information and settings</p>
        </div>

        <!-- Profile Card -->
        <div class="profile-card">
            <!-- Navigation Tabs -->
            <div class="profile-nav">
                <button class="nav-tab active" onclick="showTab('profile-info')" id="profile-tab">
                    📝 Profile Information
                </button>
                <button class="nav-tab" onclick="showTab('change-password')" id="password-tab">
                    🔒 Change Password
                </button>
            </div>

            <!-- Profile Information Tab -->
            <div id="profile-info" class="tab-content active">
                <!-- Profile Success/Error Messages -->
                @if (TempData["ProfileSuccessMessage"] != null)
                {
                        <div class="success-message">
                            <div class="success-content">
                                <div class="success-icon">
                                    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                    </svg>
                                </div>
                                <div>
                                    <p class="success-text">@TempData["ProfileSuccessMessage"]</p>
                                </div>
                            </div>
                        </div>
                }

                @if (TempData["ProfileErrorMessage"] != null)
                {
                        <div class="error-message">
                            <p>@TempData["ProfileErrorMessage"]</p>
                        </div>
                }

                <div class="info-card">
                    <p class="info-text">
                        💡 Update your profile information below. Make sure to save your changes after editing.
                    </p>
                </div>

                <form asp-action="UpdateProfile" asp-controller="Profile" method="post" enctype="multipart/form-data">
                    <input type="hidden" asp-for="UserId" />
                    <input type="hidden" asp-for="UserType" />

                    <!-- Basic Information -->
                    <div class="form-grid">
                        <h3 style="color: #374151; margin-bottom: 1rem; border-bottom: 1px solid #e5e7eb; padding-bottom: 0.5rem;">
                            👤 Basic Information
                        </h3>

                        <!-- Full Name and Email Row -->
                        <div class="form-grid-2">
                            <!-- Full Name -->
                            <div class="form-group">
                                <label asp-for="FullName" class="form-label">Full Name *</label>
                                <div class="input-wrapper">
                                    <div class="input-icon">
                                        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                        </svg>
                                    </div>
                                    <input asp-for="FullName" type="text" class="form-input" placeholder="Enter your full name">
                                </div>
                                <span asp-validation-for="FullName" class="validation-error"></span>
                            </div>

                            <!-- Email -->
                            <div class="form-group">
                                <label asp-for="Email" class="form-label">Email Address *</label>
                                <div class="input-wrapper">
                                    <div class="input-icon">
                                        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207"></path>
                                        </svg>
                                    </div>
                                    <input asp-for="Email" type="email" autocomplete="email" class="form-input" placeholder="your@email.com">
                                </div>
                                <span asp-validation-for="Email" class="validation-error"></span>
                            </div>
                        </div>

                        @if (Model.UserType == "Customer")
                        {
                                <!-- Contact Information -->
                                <h3 style="color: #374151; margin: 2rem 0 1rem 0; border-bottom: 1px solid #e5e7eb; padding-bottom: 0.5rem;">
                                    📞 Contact Information
                                </h3>

                                <!-- Phone and Address Row -->
                                <div class="form-grid-2">
                                    <!-- Phone -->
                                    <div class="form-group">
                                        <label asp-for="Phone" class="form-label">Phone Number</label>
                                        <div class="input-wrapper">
                                            <div class="input-icon">
                                                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                                                </svg>
                                            </div>
                                            <input asp-for="Phone" type="tel" class="form-input" placeholder="(555) 123-4567">
                                        </div>
                                        <span asp-validation-for="Phone" class="validation-error"></span>
                                    </div>

                                    <!-- Address -->
                                    <div class="form-group">
                                        <label asp-for="Address" class="form-label">Address</label>
                                        <div class="input-wrapper">
                                            <div class="input-icon">
                                                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                                </svg>
                                            </div>
                                            <input asp-for="Address" type="text" class="form-input" placeholder="123 Main Street, City, State">
                                        </div>
                                        <span asp-validation-for="Address" class="validation-error"></span>
                                    </div>
                                </div>

                                <!-- Photo Upload -->
                                <div class="form-group">
                                    <label asp-for="ProfilePhoto" class="form-label">Profile Photo</label>
                                    <div class="input-wrapper">
                                        <div class="input-icon">
                                            <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                            </svg>
                                        </div>
                                        <input asp-for="ProfilePhoto" type="file" accept="image/*" class="form-input" style="padding-left: 2.5rem;" onchange="previewProfileImage(this)">
                                    </div>
                                    <span asp-validation-for="ProfilePhoto" class="validation-error"></span>
                                    <p class="help-text">Upload a new profile photo (JPEG, PNG, GIF - Max 5MB)</p>

                                    <!-- Current Photo Display -->
                                @if (!string.IsNullOrEmpty(Model.CurrentPhotoUrl) && Model.CurrentPhotoUrl != "default-avatar")
                                {
                                            <div style="margin-top: 1rem;">
                                                <p style="font-size: 0.875rem; color: #6b7280; margin-bottom: 0.5rem;">Current Photo:</p>
                                                <img src="@Model.CurrentPhotoUrl" alt="Current Profile Photo" style="width: 100px; height: 100px; object-fit: cover; border-radius: 50%; border: 2px solid #0ea5e9;">
                                            </div>
                                }

                                    <!-- New Image Preview -->
                                    <div id="newImagePreview" style="margin-top: 1rem; display: none;">
                                        <p style="font-size: 0.875rem; color: #6b7280; margin-bottom: 0.5rem;">New Photo Preview:</p>
                                        <img id="newPreviewImg" src="/placeholder.svg" alt="New Preview" style="width: 100px; height: 100px; object-fit: cover; border-radius: 50%; border: 2px solid #10b981;">
                                    </div>
                                </div>

                                <!-- Personal Information -->
                                <h3 style="color: #374151; margin: 2rem 0 1rem 0; border-bottom: 1px solid #e5e7eb; padding-bottom: 0.5rem;">
                                    👤 Personal Information
                                </h3>

                                <!-- Gender and Birth Date Row -->
                                <div class="form-grid-2">
                                    <!-- Gender -->
                                    <div class="form-group">
                                        <label class="form-label">Gender</label>
                                        <div class="radio-group">
                                            <label class="radio-wrapper">
                                                <input asp-for="Gender" type="radio" value="false" class="form-radio">
                                                <span class="radio-label">👨 Male</span>
                                            </label>
                                            <label class="radio-wrapper">
                                                <input asp-for="Gender" type="radio" value="true" class="form-radio">
                                                <span class="radio-label">👩 Female</span>
                                            </label>
                                        </div>
                                    </div>

                                    <!-- Birth Date -->
                                    <div class="form-group">
                                        <label asp-for="BirthDate" class="form-label">Birth Date</label>
                                        <div class="input-wrapper">
                                            <div class="input-icon">
                                                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                                </svg>
                                            </div>
                                            <input asp-for="BirthDate" type="date" class="form-input">
                                        </div>
                                        <span asp-validation-for="BirthDate" class="validation-error"></span>
                                    </div>
                                </div>
                        }

                        <!-- Save Button -->
                        <div style="margin-top: 2rem; text-align: center;">
                            <button type="submit" class="btn-primary" id="save-btn" disabled>
                                💾 Save Changes
                            </button>
                            <a href="@Url.Action("Index", "Product")" class="btn-secondary">
                                ← Back to Dashboard
                            </a>
                        </div>
                    </div>
                </form>
            </div>

            <!-- Change Password Tab -->
            <div id="change-password" class="tab-content">
                <!-- Password Success/Error Messages -->
                @if (TempData["PasswordSuccessMessage"] != null)
                {
                        <div class="success-message">
                            <div class="success-content">
                                <div class="success-icon">
                                    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                    </svg>
                                </div>
                                <div>
                                    <p class="success-text">@TempData["PasswordSuccessMessage"]</p>
                                </div>
                            </div>
                        </div>
                }

                @if (TempData["PasswordErrorMessage"] != null)
                {
                        <div class="error-message">
                            <p>@TempData["PasswordErrorMessage"]</p>
                        </div>
                }

                <div class="info-card">
                    <p class="info-text">
                        🔐 Choose a strong password to keep your account secure. Your password should be at least 6 characters long.
                    </p>
                </div>

                <form asp-action="ChangePassword" asp-controller="Profile" method="post">
                    <!-- Hidden fields to preserve profile data -->
                    <input type="hidden" asp-for="UserId" />
                    <input type="hidden" asp-for="UserType" />
                    <input type="hidden" asp-for="FullName" />
                    <input type="hidden" asp-for="Email" />
                    <input type="hidden" asp-for="Phone" />
                    <input type="hidden" asp-for="Address" />
                    <input type="hidden" asp-for="Gender" />
                    <input type="hidden" asp-for="BirthDate" />
                    <input type="hidden" asp-for="Photo" />
                    <input type="hidden" asp-for="IsActive" />

                    <div class="form-grid">
                        <!-- Current Password -->
                        <div class="form-group">
                            <label class="form-label">Current Password *</label>
                            <div class="input-wrapper">
                                <div class="input-icon">
                                    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                                    </svg>
                                </div>
                                <input asp-for="CurrentPassword" type="password" class="form-input" placeholder="Enter your current password">
                            </div>
                            <span asp-validation-for="CurrentPassword" class="validation-error"></span>
                        </div>

                        <!-- New Password -->
                        <div class="form-group">
                            <label class="form-label">New Password *</label>
                            <div class="input-wrapper">
                                <div class="input-icon">
                                    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"></path>
                                    </svg>
                                </div>
                                <input asp-for="NewPassword" type="password" class="form-input" placeholder="Enter your new password">
                            </div>
                            <span asp-validation-for="NewPassword" class="validation-error"></span>
                        </div>

                        <!-- Confirm Password -->
                        <div class="form-group">
                            <label class="form-label">Confirm New Password *</label>
                            <div class="input-wrapper">
                                <div class="input-icon">
                                    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                    </svg>
                                </div>
                                <input asp-for="ConfirmPassword" type="password" class="form-input" placeholder="Confirm your new password">
                            </div>
                            <span asp-validation-for="ConfirmPassword" class="validation-error"></span>
                        </div>

                        <!-- Change Password Button -->
                        <div style="margin-top: 2rem; text-align: center;">
                            <button type="submit" class="btn-primary">
                                🔒 Change Password
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

        <script>
            function showTab(tabName) {
                // Hide all tab contents
                document.querySelectorAll('.tab-content').forEach(tab => {
                    tab.classList.remove('active');
                });

                // Remove active class from all nav tabs
                document.querySelectorAll('.nav-tab').forEach(tab => {
                    tab.classList.remove('active');
                });

                // Show selected tab content
                document.getElementById(tabName).classList.add('active');

                // Add active class to clicked nav tab
                if (tabName === 'profile-info') {
                    document.getElementById('profile-tab').classList.add('active');
                } else if (tabName === 'change-password') {
                    document.getElementById('password-tab').classList.add('active');
                }
            }

            // Show password tab if there was a password operation
            document.addEventListener('DOMContentLoaded', function() {
        @if (TempData["ShowPasswordTab"] != null)
        {
            <text>
                        showTab('change-password');
            </text>
        }
            });

            // Input focus animations
            document.querySelectorAll('.form-input').forEach(input => {
                input.addEventListener('focus', function() {
                    this.closest('.input-wrapper').classList.add('input-focus');
                });

                input.addEventListener('blur', function() {
                    this.closest('.input-wrapper').classList.remove('input-focus');
                });
            });

            // Form change detection for profile form
            let originalFormData = {};
            let hasChanges = false;

            // Profile image preview function
            function previewProfileImage(input) {
                const preview = document.getElementById('newImagePreview');
                const previewImg = document.getElementById('newPreviewImg');

                if (input.files && input.files[0]) {
                    const reader = new FileReader();

                    reader.onload = function(e) {
                        previewImg.src = e.target.result;
                        preview.style.display = 'block';
                        checkForChanges(); // Trigger change detection
                    };

                    reader.readAsDataURL(input.files[0]);
                } else {
                    preview.style.display = 'none';
                    checkForChanges(); // Trigger change detection
                }
            }

            function captureOriginalData() {
                const form = document.querySelector('#profile-info form');
                const formData = new FormData(form);
                originalFormData = {};

                for (let [key, value] of formData.entries()) {
                    originalFormData[key] = value;
                }

                // Handle radio buttons separately
                const genderRadios = document.querySelectorAll('input[name="Gender"]');
                genderRadios.forEach(radio => {
                    if (radio.checked) {
                        originalFormData['Gender'] = radio.value;
                    }
                });
            }

            function checkForChanges() {
                const form = document.querySelector('#profile-info form');
                const currentFormData = new FormData(form);
                hasChanges = false;

                // Check regular inputs
                for (let [key, value] of currentFormData.entries()) {
                    if (key !== 'ProfilePhoto' && originalFormData[key] !== value) {
                        hasChanges = true;
                        break;
                    }
                }

                // Check if a new photo was selected
                if (!hasChanges) {
                    const photoInput = document.querySelector('input[name="ProfilePhoto"]');
                    if (photoInput && photoInput.files && photoInput.files.length > 0) {
                        hasChanges = true;
                    }
                }

                // Check radio buttons
                if (!hasChanges) {
                    const genderRadios = document.querySelectorAll('input[name="Gender"]');
                    let currentGender = '';
                    genderRadios.forEach(radio => {
                        if (radio.checked) {
                            currentGender = radio.value;
                        }
                    });

                    if (originalFormData['Gender'] !== currentGender) {
                        hasChanges = true;
                    }
                }

                // Enable/disable save button
                const saveBtn = document.getElementById('save-btn');
                if (saveBtn) {
                    saveBtn.disabled = !hasChanges;
                    if (hasChanges) {
                        saveBtn.style.opacity = '1';
                        saveBtn.style.cursor = 'pointer';
                    } else {
                        saveBtn.style.opacity = '0.6';
                        saveBtn.style.cursor = 'not-allowed';
                    }
                }
            }

            // Initialize form change detection when page loads
            document.addEventListener('DOMContentLoaded', function() {
                // Capture original form data after a short delay to ensure all values are loaded
                setTimeout(() => {
                    captureOriginalData();

                    // Add event listeners to all form inputs
                    const formInputs = document.querySelectorAll('#profile-info input, #profile-info select, #profile-info textarea');
                    formInputs.forEach(input => {
                        input.addEventListener('input', checkForChanges);
                        input.addEventListener('change', checkForChanges);
                    });

                    // Special handling for radio buttons
                    const radioButtons = document.querySelectorAll('#profile-info input[type="radio"]');
                    radioButtons.forEach(radio => {
                        radio.addEventListener('change', checkForChanges);
                    });

                    // Initial check
                    checkForChanges();
                }, 100);
            });

            // Reset form state after successful save
            function resetFormState() {
                setTimeout(() => {
                    captureOriginalData();
                    checkForChanges();
                }, 100);
            }

            // If there's a success message, reset the form state
        @if (TempData["ProfileSuccessMessage"] != null)
        {
            <text>
                    resetFormState();
            </text>
        }
        </script>
}
