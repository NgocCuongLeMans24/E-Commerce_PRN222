@model ViewModels.CategoryManagementViewModel
@{
    ViewData["Title"] = "Category Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link href="~/css/admin/admin-categories.css" rel="stylesheet" />
}

<div class="container-fluid">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1">Category Management</h2>
            <p class="text-muted">Manage product categories and their properties</p>
        </div>
        @if (ViewBag.CanAddCategory == true)
        {
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createCategoryModal">
                <i class="fas fa-plus me-2"></i>Add Category
            </button>
        }
    </div>

    <!-- Filters and Search -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-4">
                    <label for="searchTerm" class="form-label">Search</label>
                    <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                           value="@Model.SearchTerm" placeholder="Search by category name...">
                </div>
                <div class="col-md-3">
                    <label for="sortBy" class="form-label">Sort By</label>
                    <select class="form-select" id="sortBy" name="sortBy">
                        <option value="CategoryName" selected="@(Model.SortBy == "CategoryName")">Category Name</option> 
                        <option value="ProductCount" selected="@(Model.SortBy == "ProductCount")">Product Count</option>
                        <option value="CategoryId" selected="@(Model.SortBy == "CategoryId")">Category ID</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="sortOrder" class="form-label">Order</label>
                    <select class="form-select" id="sortOrder" name="sortOrder">
                        <option value="asc" selected="@(Model.SortOrder == "asc")">Ascending</option>
                        <option value="desc" selected="@(Model.SortOrder == "desc")">Descending</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">&nbsp;</label>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search me-2"></i>Search
                        </button>
                    </div>
                </div>
                <div class="col-md-1">
                    <label class="form-label">&nbsp;</label>
                    <div class="d-grid">
                        <a href="@Url.Action("Categories")" class="btn btn-outline-secondary">
                            <i class="fas fa-times"></i>
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Categories Table -->
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">Categories (@Model.TotalCount)</h5>
        </div>
        <div class="card-body">
            @if (Model.Categories.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Image</th>
                                <th>Category Name</th>
                                <th>Alias</th>
                                <th>Description</th>
                                <th>Products</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var category in Model.Categories)
                            {
                                <tr>
                                    <td>
                                        <span class="badge bg-light text-dark">@category.CategoryId</span>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(category.Image))
                                        {
                                            <img src="~/img/@category.Image" alt="@category.CategoryName" class="category-image">
                                        }
                                        else
                                        {
                                            <div class="category-image-placeholder">
                                                <i class="fas fa-image"></i>
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        <strong>@category.CategoryName</strong>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(category.Alias))
                                        {
                                            <code class="text-info">@category.Alias</code>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(category.Description))
                                        {
                                            <span class="description-text" title="@category.Description">
                                                @(category.Description.Length > 50 ? category.Description.Substring(0, 50) + "..." : category.Description)
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">No description</span>
                                        }
                                    </td>
                                    <td>
                                        <span class="badge bg-info">@category.Products.Count products</span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            @if (ViewBag.CanEditCategory == true)
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-primary" 
                                                        onclick="editCategory(@category.CategoryId, '@category.CategoryName', '@(category.Alias ?? "")', '@(category.Description ?? "")', '@(category.Image ?? "")')">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                            }
                                            @if (ViewBag.CanDeleteCategory == true)
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-danger" 
                                                        onclick="deleteCategory(@category.CategoryId, '@category.CategoryName', @category.Products.Count)">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Page navigation" class="mt-4">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(Model.PageNumber <= 1 ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Categories", new { pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize, searchTerm = Model.SearchTerm, sortBy = Model.SortBy, sortOrder = Model.SortOrder })">Previous</a>
                            </li>
                            
                            @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                            {
                                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Categories", new { pageNumber = i, pageSize = Model.PageSize, searchTerm = Model.SearchTerm, sortBy = Model.SortBy, sortOrder = Model.SortOrder })">@i</a>
                                </li>
                            }
                            
                            <li class="page-item @(Model.PageNumber >= Model.TotalPages ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Categories", new { pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize, searchTerm = Model.SearchTerm, sortBy = Model.SortBy, sortOrder = Model.SortOrder })">Next</a>
                            </li>
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-tags text-muted" style="font-size: 3rem;"></i>
                    <h5 class="mt-3 text-muted">No categories found</h5>
                    <p class="text-muted">Try adjusting your search criteria or add new categories.</p>
                </div>
            }
        </div>
    </div>
</div>

<!-- Create Category Modal -->
<div class="modal fade" id="createCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="post" action="@Url.Action("CreateCategory")">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="CategoryName" class="form-label">Category Name <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="CategoryName" name="CategoryName" required>
                    </div>
                    <div class="mb-3">
                        <label for="Alias" class="form-label">Alias</label>
                        <input type="text" class="form-control" id="Alias" name="Alias" placeholder="URL-friendly name">
                        <div class="form-text">Optional URL-friendly version of the category name</div>
                    </div>
                    <div class="mb-3">
                        <label for="Description" class="form-label">Description</label>
                        <textarea class="form-control" id="Description" name="Description" rows="3" placeholder="Category description..."></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="Image" class="form-label">Image</label>
                        <input type="text" class="form-control" id="Image" name="Image" placeholder="image.jpg">
                        <div class="form-text">Image filename (should be uploaded to /img/ folder)</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Category</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="post" action="@Url.Action("UpdateCategory")">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" id="editCategoryId" name="CategoryId">
                    <div class="mb-3">
                        <label for="editCategoryName" class="form-label">Category Name <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="editCategoryName" name="CategoryName" required>
                    </div>
                    <div class="mb-3">
                        <label for="editAlias" class="form-label">Alias</label>
                        <input type="text" class="form-control" id="editAlias" name="Alias" placeholder="URL-friendly name">
                        <div class="form-text">Optional URL-friendly version of the category name</div>
                    </div>
                    <div class="mb-3">
                        <label for="editDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="editDescription" name="Description" rows="3" placeholder="Category description..."></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="editImage" class="form-label">Image</label>
                        <input type="text" class="form-control" id="editImage" name="Image" placeholder="image.jpg">
                        <div class="form-text">Image filename (should be uploaded to /img/ folder)</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Category</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this category?</p>
                <div class="alert alert-warning">
                    <strong>Category:</strong> <span id="deleteCategoryName"></span>
                </div>
                <div id="deleteWarning" class="alert alert-danger" style="display: none;">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    This category has products assigned to it. You cannot delete it until all products are moved to other categories.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form method="post" action="@Url.Action("DeleteCategory")" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="deleteCategoryId" name="categoryId">
                    <button type="submit" id="confirmDeleteBtn" class="btn btn-danger">Delete Category</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function editCategory(categoryId, categoryName, alias, description, image) {
            document.getElementById('editCategoryId').value = categoryId;
            document.getElementById('editCategoryName').value = categoryName;
            document.getElementById('editAlias').value = alias;
            document.getElementById('editDescription').value = description;
            document.getElementById('editImage').value = image;
            new bootstrap.Modal(document.getElementById('editCategoryModal')).show();
        }

        function deleteCategory(categoryId, categoryName, productCount) {
            document.getElementById('deleteCategoryId').value = categoryId;
            document.getElementById('deleteCategoryName').textContent = categoryName;
            
            const warningDiv = document.getElementById('deleteWarning');
            const confirmBtn = document.getElementById('confirmDeleteBtn');
            
            if (productCount > 0) {
                warningDiv.style.display = 'block';
                confirmBtn.disabled = true;
                confirmBtn.textContent = 'Cannot Delete';
            } else {
                warningDiv.style.display = 'none';
                confirmBtn.disabled = false;
                confirmBtn.textContent = 'Delete Category';
            }
            
            new bootstrap.Modal(document.getElementById('deleteCategoryModal')).show();
        }

        // Auto-generate alias from category name
        document.getElementById('CategoryName').addEventListener('input', function(e) {
            const alias = e.target.value.toLowerCase()
                .replace(/[^a-z0-9\s-]/g, '')
                .replace(/\s+/g, '-')
                .replace(/-+/g, '-')
                .trim('-');
            document.getElementById('Alias').value = alias;
        });

        document.getElementById('editCategoryName').addEventListener('input', function(e) {
            const alias = e.target.value.toLowerCase()
                .replace(/[^a-z0-9\s-]/g, '')
                .replace(/\s+/g, '-')
                .replace(/-+/g, '-')
                .trim('-');
            document.getElementById('editAlias').value = alias;
        });
    </script>
}
