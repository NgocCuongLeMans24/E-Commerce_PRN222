@model ViewModels.ResetPasswordViewModel
@{
    ViewData["Title"] = "Reset Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .reset-container {
        min-height: 100vh;
        background: linear-gradient(135deg, #ecfccb 0%, #d9f99d 50%, #84cc16 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 3rem 1rem;
    }

    .reset-wrapper {
        max-width: 28rem;
        width: 100%;
    }

    .brand-section {
        text-align: center;
        margin-bottom: 2rem;
    }

    .brand-logo {
        margin: 0 auto 1rem;
        height: 4rem;
        width: 4rem;
        background: linear-gradient(135deg, #84cc16, #65a30d);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 10px 25px rgba(132, 204, 22, 0.3);
    }

    .brand-logo svg {
        height: 2rem;
        width: 2rem;
        color: white;
    }

    .brand-title {
        font-size: 1.875rem;
        font-weight: 700;
        color: #111827;
        margin-bottom: 0.5rem;
    }

    .brand-subtitle {
        color: #6b7280;
    }

    .form-card {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
        border-radius: 1rem;
        padding: 2rem;
        border: 1px solid rgba(255, 255, 255, 0.2);
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.6s ease-out;
    }

    .form-card.loaded {
        opacity: 1;
        transform: translateY(0);
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        font-size: 0.875rem;
        font-weight: 600;
        color: #374151;
        margin-bottom: 0.5rem;
    }

    .input-wrapper {
        position: relative;
    }

    .input-icon {
        position: absolute;
        left: 0.75rem;
        top: 50%;
        transform: translateY(-50%);
        height: 1.25rem;
        width: 1.25rem;
        color: #9ca3af;
        pointer-events: none;
    }

    .form-input {
        width: 100%;
        padding: 0.75rem 0.75rem 0.75rem 2.5rem;
        background-color: #f9fafb;
        border: 1px solid #e5e7eb;
        border-radius: 0.75rem;
        color: #111827;
        font-size: 0.875rem;
        transition: all 0.2s ease;
    }

    .form-input:focus {
        outline: none;
        box-shadow: 0 0 0 2px #84cc16;
        border-color: transparent;
    }

    .password-toggle {
        position: absolute;
        right: 0.75rem;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        cursor: pointer;
        padding: 0;
    }

    .password-toggle svg {
        height: 1.25rem;
        width: 1.25rem;
        color: #9ca3af;
        transition: color 0.2s ease;
    }

    .password-toggle:hover svg {
        color: #6b7280;
    }

    .submit-btn {
        position: relative;
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 0.75rem 1rem;
        border: none;
        font-size: 0.875rem;
        font-weight: 600;
        border-radius: 0.75rem;
        color: white;
        background: linear-gradient(135deg, #84cc16, #65a30d);
        cursor: pointer;
        transition: all 0.2s ease;
        box-shadow: 0 4px 15px rgba(132, 204, 22, 0.3);
        margin-top: 1rem;
    }

    .submit-btn:hover {
        background: linear-gradient(135deg, #65a30d, #4d7c0f);
        transform: scale(1.02);
        box-shadow: 0 8px 25px rgba(132, 204, 22, 0.4);
    }

    .btn-icon {
        position: absolute;
        left: 0.75rem;
        height: 1.25rem;
        width: 1.25rem;
        color: rgba(255, 255, 255, 0.7);
    }

    .back-link {
        text-align: center;
        margin-top: 1.5rem;
    }

    .back-text {
        font-size: 0.875rem;
        color: #6b7280;
    }

    .back-text a {
        font-weight: 600;
        color: #84cc16;
        text-decoration: none;
        transition: color 0.2s ease;
    }

    .back-text a:hover {
        color: #65a30d;
    }

    .error-message {
        background-color: #fef2f2;
        border-left: 4px solid #f87171;
        padding: 1rem;
        border-radius: 0.375rem;
        color: #dc2626;
        font-size: 0.875rem;
        margin-bottom: 1.5rem;
        display: none;
    }

    .validation-error {
        color: #dc2626;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }

    .help-text {
        font-size: 0.75rem;
        color: #9ca3af;
        margin-top: 0.25rem;
    }

    .password-strength {
        margin-top: 0.5rem;
    }

    .strength-bar {
        height: 0.25rem;
        background-color: #e5e7eb;
        border-radius: 0.125rem;
        overflow: hidden;
        margin-bottom: 0.5rem;
    }

    .strength-fill {
        height: 100%;
        transition: all 0.3s ease;
        border-radius: 0.125rem;
    }

    .strength-text {
        font-size: 0.75rem;
        font-weight: 500;
    }

    .strength-weak { background-color: #ef4444; color: #dc2626; }
    .strength-fair { background-color: #f59e0b; color: #d97706; }
    .strength-good { background-color: #10b981; color: #059669; }
    .strength-strong { background-color: #84cc16; color: #65a30d; }
</style>

<div class="reset-container">
    <div class="reset-wrapper">
        <!-- Logo/Brand Section -->
        <div class="brand-section">
            <div class="brand-logo">
                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                </svg>
            </div>
            <h2 class="brand-title">Reset Password</h2>
            <p class="brand-subtitle">Create your new password</p>
        </div>

        <!-- Reset Password Form Card -->
        <div class="form-card" id="form-card">
            <form asp-action="ResetPassword" asp-controller="Account" method="post">
                <input type="hidden" asp-for="Email" />
                <input type="hidden" asp-for="Token" />
                <input type="hidden" asp-for="UserType" />

                <!-- Error Messages -->
                <div asp-validation-summary="All" class="error-message" id="error-container"></div>

                <!-- New Password -->
                <div class="form-group">
                    <label asp-for="NewPassword" class="form-label">New Password</label>
                    <div class="input-wrapper">
                        <div class="input-icon">
                            <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                            </svg>
                        </div>
                        <input asp-for="NewPassword" type="password" autocomplete="new-password" class="form-input" placeholder="Enter your new password" id="new-password">
                        <button type="button" class="password-toggle" onclick="togglePassword('new-password', 'eye-icon-new')">
                            <svg fill="none" stroke="currentColor" viewBox="0 0 24 24" id="eye-icon-new">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                        </button>
                    </div>
                    <span asp-validation-for="NewPassword" class="validation-error"></span>
                    <p class="help-text">Minimum 6 characters required</p>

                    <!-- Password Strength Indicator -->
                    <div class="password-strength" id="password-strength" style="display: none;">
                        <div class="strength-bar">
                            <div class="strength-fill" id="strength-fill" style="width: 0%;"></div>
                        </div>
                        <div class="strength-text" id="strength-text">Password strength: Weak</div>
                    </div>
                </div>

                <!-- Confirm Password -->
                <div class="form-group">
                    <label asp-for="ConfirmPassword" class="form-label">Confirm New Password</label>
                    <div class="input-wrapper">
                        <div class="input-icon">
                            <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                        <input asp-for="ConfirmPassword" type="password" autocomplete="new-password" class="form-input" placeholder="Confirm your new password" id="confirm-password">
                        <button type="button" class="password-toggle" onclick="togglePassword('confirm-password', 'eye-icon-confirm')">
                            <svg fill="none" stroke="currentColor" viewBox="0 0 24 24" id="eye-icon-confirm">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                        </button>
                    </div>
                    <span asp-validation-for="ConfirmPassword" class="validation-error"></span>
                </div>

                <!-- Submit Button -->
                <button type="submit" class="submit-btn">
                    <span class="btn-icon">
                        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </span>
                    Reset Password
                </button>

                <!-- Back Link -->
                <div class="back-link">
                    <p class="back-text">
                        <a href="@Url.Action("Login", "Account")">← Back to Login</a>
                    </p>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

        <script>
            // Password visibility toggle
            function togglePassword(inputId, iconId) {
                const passwordInput = document.getElementById(inputId);
                const eyeIcon = document.getElementById(iconId);

                if (passwordInput.type === 'password') {
                    passwordInput.type = 'text';
                    eyeIcon.innerHTML = `
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21"></path>
                    `;
                } else {
                    passwordInput.type = 'password';
                    eyeIcon.innerHTML = `
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    `;
                }
            }

            // Password strength checker
            function checkPasswordStrength(password) {
                let strength = 0;
                let feedback = [];

                if (password.length >= 6) strength += 1;
                if (password.length >= 8) strength += 1;
                if (/[a-z]/.test(password)) strength += 1;
                if (/[A-Z]/.test(password)) strength += 1;
                if (/[0-9]/.test(password)) strength += 1;
                if (/[^A-Za-z0-9]/.test(password)) strength += 1;

                const strengthIndicator = document.getElementById('password-strength');
                const strengthFill = document.getElementById('strength-fill');
                const strengthText = document.getElementById('strength-text');

                if (password.length === 0) {
                    strengthIndicator.style.display = 'none';
                    return;
                }

                strengthIndicator.style.display = 'block';

                let strengthClass = '';
                let strengthLabel = '';
                let fillWidth = 0;

                if (strength <= 2) {
                    strengthClass = 'strength-weak';
                    strengthLabel = 'Weak';
                    fillWidth = 25;
                } else if (strength <= 3) {
                    strengthClass = 'strength-fair';
                    strengthLabel = 'Fair';
                    fillWidth = 50;
                } else if (strength <= 4) {
                    strengthClass = 'strength-good';
                    strengthLabel = 'Good';
                    fillWidth = 75;
                } else {
                    strengthClass = 'strength-strong';
                    strengthLabel = 'Strong';
                    fillWidth = 100;
                }

                strengthFill.className = `strength-fill ${strengthClass}`;
                strengthFill.style.width = `${fillWidth}%`;
                strengthText.className = `strength-text ${strengthClass}`;
                strengthText.textContent = `Password strength: ${strengthLabel}`;
            }

            // Form animation on load
            document.addEventListener('DOMContentLoaded', function() {
                const formCard = document.getElementById('form-card');
                const newPasswordInput = document.getElementById('new-password');

                setTimeout(() => {
                    formCard.classList.add('loaded');
                }, 100);

                // Password strength checking
                newPasswordInput.addEventListener('input', function() {
                    checkPasswordStrength(this.value);
                });

                // Show error container if there are validation errors
                const errorContainer = document.getElementById('error-container');
                const errorMessages = document.querySelectorAll('[data-valmsg-summary="true"] li');
                const hasErrors = Array.from(errorMessages).some(li => li.textContent.trim() !== '');

                errorContainer.style.display = hasErrors ? 'block' : 'none';
            });

            // Input focus animations
            document.querySelectorAll('.form-input').forEach(input => {
                input.addEventListener('focus', function() {
                    this.closest('.input-wrapper').classList.add('input-focus');
                });

                input.addEventListener('blur', function() {
                    this.closest('.input-wrapper').classList.remove('input-focus');
                });
            });
        </script>
}
